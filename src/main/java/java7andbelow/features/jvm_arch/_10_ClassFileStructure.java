package java7andbelow.features.jvm_arch;

public class _10_ClassFileStructure {

    public static void main(String[] args) {

        /*
            Class File Structure
            ====================
            Class File {
                magic_number;
                minor_version;
                major_version;
                constant_pool_count;
                constant_pool[];
                access_flags;
                this_class;
                super_class;
                interface_count;
                interface[];
                fields_count;
                fields[];
                methods_count;
                methods[];
                attributes_count;
                attributes[];
            }

            Magic Number
            ============
            The first 4 bytes of class file are Magic Number. This is a predefined value used
            by JVM to identify .class file is generated by valid compiler or not. The value
            should be OXCAFEBABE.

            Note:
            =====
            Whenever we are executing a Java class, if JVM is unable to find
            a valid magic number, then we will get the runtime exception saying
            java.lang.ClassFormatError : Incompatible Magic Value.

            Minor and Major Version
            =======================
            Major and Minor versions represent.class file version. JVM will use these versions
            to identify which version of the compiler generates the current .class file.

            M.m => Major.minor
            49.0 => 1.5v Compiler
            50.0 => 1.6v Compiler
            51.0 => 1.7v Compiler

            Note:
            =====
            Lower version compiler generated .class files can be run by higher version
            JVM. But higher version compiler generated .class file canâ€™t be run by lower
            version JVM. If we are trying to run, then we will get the runtime exception
            saying UnsupportedClassVersionError.

            constant_pool_count
            ===================
            It represents the number of constants present in the constant_pool.

            constant_pool_count
            ===================
            It represents the number of constants present in the constant_pool.

            constant_pool[]
            ===============
            It represents the information about constants present in the constant_pool.

            access_flags
            ============
            It provides information about the modifiers declared in the class.

            this_class
            ==========
            It represents the fully qualified name of the class.

            super_class
            ===========
            It represents the fully qualified name of the immediate superclass of the
            current class.
            this_class: Test
            super_class: Object

            interface_count
            ===============
            It returns the number of interfaces implemented by current class.

            interface[]
            ===========
            It returns the interfaces information implemented by the current class.

            fields_count
            ============
            It represents the number of fields present in the current class.

            fields[]
            ========
            It represents the fields information present in the current class.

            methods_count
            =============
            It represents the number of methods present in the current class.

            methods[]
            =========
            It provides information about all methods present in the current class.

            attributes_count
            ================
            It returns the number of attributes present in the current class.

            attributes[]
            ============
            It provides information about all attributes present in the current class.
            Javap -verbose Test.class
        */
    }

}
